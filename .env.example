# Example Environment Variables for DreamHub Application
# Copy this file to .env and fill in your actual values.
# Do NOT commit the .env file to version control.

# --- General ---
# ENVIRONMENT=development # Optional: development, staging, or production (default: development)

# --- API Server ---
# SERVER_PORT=8080 # Optional: Port for the API server (default: 8080)

# --- Database Configuration ---
# Choose ONE of the following methods:

# Method 1: Connect to an EXTERNAL/NATIVE PostgreSQL database
# If you uncomment and set DATABASE_URL, the Docker Compose postgres service will NOT be started.
# Ensure your native PostgreSQL server is running, accessible, has pgvector extension enabled,
# and the database/user/tables are created (e.g., by running init_db.sql manually).
# Use 'host.docker.internal' as the host if connecting from the app container to the host machine.
# DATABASE_URL=postgres://your_native_user:your_native_password@host.docker.internal:5432/your_native_db?sslmode=disable

# Method 2: Use the PostgreSQL database managed by Docker Compose
# If DATABASE_URL above is commented out or empty, Docker Compose will start the postgres service.
# The Go application should still connect using a DATABASE_URL.
# Set the DATABASE_URL below to connect to the Docker Compose postgres service.
DATABASE_URL=postgres://user:password@postgres:5432/database?sslmode=disable # Used by Go app to connect to the Docker container

# The following are ONLY used by Docker Compose to initialize the PostgreSQL container
# when Method 2 is chosen (i.e., when DATABASE_URL for external DB is commented out).
# Ensure these values MATCH the corresponding parts in the DATABASE_URL used for Method 2.
POSTGRES_USER=user # Required for DB init if using Docker Compose DB
POSTGRES_PASSWORD=password # Required for DB init if using Docker Compose DB
POSTGRES_DB=database # Required for DB init if using Docker Compose DB

# --- Redis ---
# If using Docker Compose redis service, the address is typically 'redis:6379'
# If using external Redis, provide its address.
REDIS_ADDR=redis:6379 # Default assumes Docker Compose redis service
# REDIS_PASSWORD=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx # Optional: Redis password (default: none)

# --- OpenAI ---
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx # Required: Your OpenAI API Key
# OPENAI_MODEL=gpt-4o # Optional: Model for chat completion (default: gpt-4o)
# OPENAI_EMBEDDING_MODEL=text-embedding-3-large # Optional: Model for embeddings (default: text-embedding-3-large)

# --- File Uploads ---
# UPLOAD_DIR=uploads # Optional: Directory to store uploaded files (default: uploads)

# --- Chat ---
# MAX_HISTORY_MESSAGES=10 # Optional: Max conversation history messages to load (default: 10)

# --- Worker / Embedding ---
# WORKER_CONCURRENCY=10 # Optional: Number of concurrent tasks the worker can process (default: 10)
# SPLITTER_CHUNK_SIZE=1000 # Optional: Chunk size for text splitting (default: 1000)
# SPLITTER_CHUNK_OVERLAP=200 # Optional: Chunk overlap for text splitting (default: 200)
# EMBEDDING_TIMEOUT=5m # Optional: Timeout for embedding process (default: 5m)